classDiagram
    class Interest {
        UUID id
        CiString name
        String description
        Atom type
        User[] users
        destroy()
        update(UUID id, CiString name, String description, Atom type)
        read()
        create(Map[] users, UUID id, CiString name, String description, ...)
        by_id(UUID id)
        by_type(String type)
        by_name(String name)
    }
    class Token {
        Map extra_data
        String purpose
        UtcDatetime expires_at
        String subject
        String jti
        get_token(String token, String jti, String purpose)
        store_token(String token, Map extra_data, String purpose)
        store_confirmation_changes(String token, Map extra_data, String purpose)
        get_confirmation_changes(String jti)
        revoked?(String token, String jti)
        revoke_token(String token, Map extra_data)
        read_expired()
        expunge_expired()
    }
    class User {
        UUID id
        CiString email
        CiString first_name
        CiString last_name
        String hashed_password
        Interest[] interests
        password_reset_with_password(String reset_token, String password, String password_confirmation)
        request_password_reset_with_password(CiString email)
        sign_in_with_password(CiString email, String password)
        register_with_password(String password, String password_confirmation, CiString email)
        get_by_subject()
        destroy()
        read()
        update(UUID id, CiString email, CiString first_name, CiString last_name, ...)
        create(UUID id, CiString email, CiString first_name, CiString last_name, ...)
        by_id(UUID id)
    }
    class UserInterest {
        UUID id
        UUID user_id
        UUID interest_id
        User user
        Interest interest
        create(UUID id, UUID user_id, UUID interest_id)
        read()
        destroy()
        by_id(UUID id)
    }

    Interest -- User
    Interest -- UserInterest
    User -- UserInterest
